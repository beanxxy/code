package com.pmes.app.controller;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.Map.Entry;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.google.gson.Gson;
import com.pmes.PmesApplication;
import com.pmes.app.dao.ItemsRepository;
import com.pmes.common.QRCodeUtil;
import com.pmes.common.ToWeb;
import com.pmes.model.ModelService;

import io.swagger.annotations.ApiOperation;
import sun.misc.BASE64Decoder;

/**
 * 文件管理
 * 
 * @author xxy
 */
@RestController
@RequestMapping("upfile")
public class UpFileController extends Controller {
	

	@Autowired
	private HttpSession session;
	 
    @Autowired
	ItemsRepository entityRepository;
	
	@Autowired
	ModelService modelService;
	
	@RequestMapping(value = "/upload/{name}/{uuid}/{clazz}/")
	public void testUploadFile(HttpServletRequest req, MultipartHttpServletRequest multiReq,
			@PathVariable("name") 	String name,
			@PathVariable("uuid") 	String uuid,
			@PathVariable("clazz") 	String clazz) {
		//System.out.println(req.getParameter("file"));
		
		
		com.pmes.app.vo.File fi = new  com.pmes.app.vo.File();
		
		fi.code = name;
		fi.name = name.replace(name.split("_")[0]+"_","");
		fi.oid = uuid;
		fi.clazz= clazz;
		fi.user = ((com.pmes.app.vo.User)session.getAttribute("user")).username;
		Date dNow = new Date( );
		SimpleDateFormat ft = new SimpleDateFormat ("yyyy-MM-dd hh:mm:ss");
		fi.date = ft.format(dNow);
		
		String imageFile = req.getParameter("file");
		if(imageFile!=null) {
			String[] imageFiles=imageFile.split("data:image/jpeg;base64,");
			int ii=0;
			for (String str : imageFiles) if(str.length()>0){
				//System.out.println(str);
				BASE64Decoder decoder = new BASE64Decoder();
	             // Base64解码      
				byte[] imageByte = null;
				try {
					imageByte = decoder.decodeBuffer(str);      
	                for (int i = 0; i < imageByte.length; ++i) {      
	                    if (imageByte[i] < 0) {// 调整异常数据      
	                         imageByte[i] += 256;      
	                    }      
	                }      
	            } catch (Exception e) {
	                e.printStackTrace(); 
	            }      
	            try {
	                // 生成文件         
	                File ifile = new File(PmesApplication.filepath + (ii++)+name);
	                ifile.createNewFile();
	                if(!ifile.exists()){
	                	ifile.createNewFile();
	                }
	                OutputStream imageStream = new FileOutputStream(ifile);
	                imageStream.write(imageByte);
	                imageStream.flush();
	                imageStream.close();                    
	            } catch (Exception e) {         
	                e.printStackTrace();
	            } 
			} 
		}else {
			Map<String, MultipartFile> map = multiReq.getFileMap();
			for (Entry<String, MultipartFile> entry : map.entrySet()) {
				//System.out.println("Key = " + entry.getKey() + ", Value = " + entry.getValue());
				// 获取上传文件的路径
				String uploadFilePath = multiReq.getFile(entry.getKey()).getOriginalFilename();
				//System.out.println("uploadFlePath:" + uploadFilePath);
				// 截取上传文件的文件名
				String uploadFileName = uploadFilePath.substring(uploadFilePath.lastIndexOf('\\') + 1,
						uploadFilePath.indexOf('.'));
				//System.out.println("multiReq.getFile()" + uploadFileName);
				// 截取上传文件的后缀
				String uploadFileSuffix = uploadFilePath.substring(uploadFilePath.indexOf('.') + 1,
						uploadFilePath.length());
				//System.out.println("uploadFileSuffix:" + uploadFileSuffix);
				FileOutputStream fos = null;
				InputStream fis = null;
				try {
					fi.size = multiReq.getFile(entry.getKey()).getSize()+"";
					fis = multiReq.getFile(entry.getKey()).getInputStream();
					fos = new FileOutputStream(new File(filepath + name));
					byte[] temp = new byte[1024];
					int i = fis.read(temp);
					while (i != -1) {
						fos.write(temp, 0, temp.length);
						fos.flush();
						i = fis.read(temp);
					}
				} catch (IOException e) {
					e.printStackTrace();
				} finally {
					if (fis != null) {
						try {
							fis.close();
						} catch (IOException e) {
							e.printStackTrace();
						}
					}
					if (fos != null) {
						try {
							fos.close();
						} catch (IOException e) {
							e.printStackTrace();
						}
					}
				}
			}
		}
		entityRepository.save(sessionFactory,fi); 
	}
}
