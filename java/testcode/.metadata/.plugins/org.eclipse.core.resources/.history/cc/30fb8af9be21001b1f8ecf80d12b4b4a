package waste;

import java.util.Deque;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import gateway.core.model.McuData;

public class Executorsss {
	public static void main(String[] arg) {
		System.out.println("xxx");
		ScheduledExecutorService scheduledThreadPool = Executors.newScheduledThreadPool(5); 
		//ScheduledExecutorService testService = Executors.newSingleThreadScheduledExecutor();
		int i=0;
		Map<String,String> db = new HashMap<String,String>();
		Deque<String> dq = new LinkedList<String>();
		for(i=0;i<100;i++) {
			dq.add(i+"");
			//db.put(i+"",i+"");
		}
		for(i=0;i<100;i++) {
			scheduledThreadPool.scheduleAtFixedRate(()->{
				String threadName = dq.pop();
				System.out.println("开始执行:"+threadName);
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				System.out.println("执行完:"+threadName);
			}, 1, 3, TimeUnit.SECONDS);
		}
		
	}
}
